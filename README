ATWAN

What is this and how does it work?

This is a tool which will allow you to take any machine, VM or tin, and
bootstrap a network of servers managed by a CMDB with next to no human
interaction.

It will be eventually, anyway.

Requirements
============

1 systems administrator (with laptop, but they come as a pair).

1 (optionally virtual) environment.

1 internet connection.

1 CMDB (currently only puppet is supported).

Bash.

Wget.

GnuPG.

Xorriso (although this is baked into the debian and centos distribution
scripts, not the mkiso-* scripts so is not a hard dependency).

Currently only Debian 7 (Wheezy) and puppet are supported. CentOS was supported
but it lapsed. Hooks to handle non-puppet CMDBs have only just been added.


Overview
========

Ultimately there are two scripts, mkiso-goldimage and mkiso-initialiser, which
call a series of much smaller scripts to perform the half dozen or so steps
required to create each type of ISO. A search path is utilised so that, for
example, the same scripts to install Puppet can be used for Debian and CentOS,
if they are compatible.

mkiso-goldimage and mkiso-initialiser will give a usage message if -? (or any
other unknown option) is passed. I have paid extra attention to ensure error
states are handled and the messages clear. If anything is missing please let me
know.

Where both scripts need the same options (eg. the OS release to build against),
they are kept in sync between the two scripts (both internal and in how they
are presented to the user in the usage message and the letter chosen to
represent them in the argument list).

Two options are of particular note:

 * -w to specify the directory to be used for building the images. Not
   recommended to stick with the default of /tmp as there must be enough space
   for the installer ISO to be download, extracted and re-packed.

 * -c to specify a directory to cache downloaded files into, eg. ~/Downloads is
   where Chrome and Firefox download to by default. If not specified, atwan
   will download to /tmp (or wherever mktemp tells it to) and delete the file
   when finished with it.


mkiso-goldimage
===============

Downloads the installer CD for the operating system you specify and modifies it to:

 * Add an option to automatically install the operating system with the least
   amount of software practical. Typically this means the kernel, whatever
   package management system the distribution uses, syslog, cron and possibly
   an SMTP server.

   When I trust myself enough, it will also make this option the default option
   when the CD is booted.

 * Install a given GPG public key to root's public keyring.

 * Install a script (/root/atwan-initialise) and get cron to run it every minute.

 * Not boot the resulting installation - it will shut down or just stop after
   the installation is finished.

This ISO is then used to create a gold image which should be turned into
whatever your VM manager calls a template for future cloning.

When the template is cloned into a new VM, it will run /root/atwan-initialise
every minute to do the following:

 * Attempt to mount a CD on /mnt, or complain to STDERR that /mnt is bust and
   exit with code 1.

   It was originally going to be a (much easier to create) ext2 filesystem in a
   file, but at least ESXi cannot turn that into a virtual block device (eg. USB).

 * Generate a lockfile in /var/lock/initialise.lock containing the script's PID,
   or fail with no error but exit code 2. This will be removed when the script
   finishes.

 * Verify that the contents of the CD are signed by the GPG public key
   installed into the gold image, and that /mnt/autorun in particular is signed
   and executable.

 * Execute /mnt/auturun


mkiso-initialiser
=================

Create an ISO which contains the autorun script used above. This ISO is unique
per host (because I haven't written DHCP support yet) and (again because I
haven't written that bit), the IP and DNS servers must be set manually, as must
the network and default gateway if they are not the obvious (/24 and .1).

autorun will:

 * Remove the initialiser script from cron.

 * Optionally change the root password hard-coded into the gold image.

 * Optionally set this VM up for bootstrapping without a central configuration
   node (that is - it will include a tarball to extract to /etc and alter the
   command used to activate the CMDB).

 * Configure the network settings, which can include configuring http proxy
   settings. Up to now the cloned VM has been operating with only the loopback
   device operational.

 * Configure the package repository.

 * Install and configure a CMDB.

Each file placed onto the CD is signed with the private counterpart to the
public key installed in the gold image. 32 bytes are extracted from /dev/random
and passed into '(shasum||md5sum)' to form a comment in /mnt/autorun and ensure
that its contents are unique. This is really just a placeholder (hence the
intentionally bad hash algorithm) until somebody who knows the maths can step
in and get it provably correct, as opposed to just working.

If you don't use the GPG agent, this process will annoy you.
