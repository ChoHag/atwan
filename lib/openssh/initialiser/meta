# Include steps to install openssh with pre-generated private keys.

at_steps=( trust configuration )

ats_trust_summary='[-K <key types>] [-G <key options>] [-O <save path prefix>]'
IFS='' read -r -d '' ats_trust_options <<'EOF' || true
    -K: The key types to be generated specified as a colon-separated list.
        Default: ecdsa:rsa:dsa
    -G: Any additional options to pass to the ssh-keygen command for each key
	type. Multiple -G options can be given with an argument of the key type
	(eg. ecdsa) followed by a colon and the _quoted_ string to append to
	ssh-keygen, or a plain integer which to specify the keysize in bits.
	  eg. -G ecdsa:521 -O rsa:"-b 4096 -C 'A large key with a comment'"
    -O: Location to save the public keys. "<type>.pub" is appended.
        Default: initialiser--<fqdn>-openssh-
EOF
ats_trust_getopts=K:G:O:
at_args_K=(1 string ecdsa:rsa:dsa)
at_args_G=(0 multi-string)
at_args_O=(1 string initialiser--\$at_optarg_n-openssh-)

ats_configuration_summary='[-M <ssh public key> | -A <ssh known_hosts file>]'
IFS='' read -r -d '' ats_configuration_options <<'EOF' || true
    -M: Public key file(s) to include in /root/.ssh/authorized_keys on the new
        node.
    -A: A complete authorized_keys file for the new server _instead of_ listing
        individual public key files.
EOF
ats_configuration_getopts=M:H:
at_args_M=(0 multi-string)
at_args_A=(0 string)

further_checks() {
  if [[ -v at_optarg_M && -v at_optarg_H ]]; then
    echo 'The ssh public key (-M) and known_hosts file (-H) options are incompatible.' >&2
    return 1
  fi
  return 0
}
