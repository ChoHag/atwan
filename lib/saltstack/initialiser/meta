# Include steps in the initialiser package to install and configure a salt minion as
# the configuration management tool.

at_steps=(
  bootstrap
  pre/configuration
)

ats_bootstrap_summary='[ -B [-C <command-line>] [ -E <git repository> [-H] ] ]'
IFS='' read -r -d '' ats_bootstrap_options <<'EOF' || true
    -B: Create a bootstrap iso.
    -C: Extra options to the salt-call command.
    -E: A git repository whose bootstrap branch will be checked out to /srv.
    -H: The git repository contains only the contents of /srv/pillar, and its
        bootstrap.sls file will be used to construct /srv/salt.
EOF
ats_bootstrap_getopts=BC:E:H

ats_configuration_summary="$ats_configuration_summary [-M <salt master>] [-P <master fingerprint> | -W] [-G <method> [-O <options>]] [-S <location>] [-z]"
IFS='' read -r -d '' ats_configuration_options <<EOF || true
$ats_configuration_options
    Salt:
    -M: The salt master address to connect to from the minion.
        A bootstrap iso only accepts the arguments 'localhost' (along with
	'127.0.0.1' or '::1') or the name given to -n. In this case it used
	as normal but indicated that the bootstrap node is a salt master and
	that atwan should also install the node's public key in the master's
	accetped keystore.
    -P: Fingerprint of the salt master's public key.
    -W: Connect to an unverified salt master (mnemonic: pwn me).
    -G: Generation method (salt-key, openssl)
        Default: salt-key
    -O: Key size in bits.
        Default: 4096
    -S: Location to submit node's public key to.
        Default: same as -M, no default in bootstrap mode.
    -z: Perform the configuration step in the atwan plugin (openssh).
EOF
ats_configuration_getopts=${ats_configuration_getopts}M:P:WG:O:S:z
at_args_O=(0 string 4096)
