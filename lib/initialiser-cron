#!/bin/sh

set -e

if ! awk '$2 == "/mnt" {exit 1}' /proc/mounts; then # if clause is inverted
  echo $0: /mnt is already mounted. >&2
  exit 1
fi

if [ -e /var/lock/initialise.lock ]; then
  exit 2
fi
echo $$ >/var/lock/initialise.lock
trap 'rm -f /var/lock/initialise.lock' EXIT

mount -o ro /dev/cdrom /mnt 2>/dev/null || exit 3
trap 'umount /mnt' EXIT

failgpg() {
  echo The signature of /mnt/"$1" could not be verified. >&2
  fail=1
}

if [ ! -e /mnt/cd.list -o ! -e /mnt/cd.list.gpg ]; then
  exit 0
fi

if ! gpg --verify /mnt/cd.list.gpg; then
  failgpg /mnt/cd.list
  exit 1
fi

unset fail
unset got_autorun

while read file; do
  if [ "${file##*/}" = "autorun" ]; then
    got_autorun=1
  fi
  gpg --verify /mnt/"$file".gpg || failgpg /mnt/"$file"
done </mnt/cd.list

if [ "$fail" ]; then
  exit 1
fi

# This checks not only that it exists, but that it's signed too.
if [ -z "$got_autorun" ]; then
  echo /mnt/autorun not found. >&2
  exit 1
fi

if [ ! -x /mnt/autorun ]; then
  echo /mnt/autorun is not executable. >&2
  exit 1
fi

export PATH=/sbin:/bin:/usr/sbin:/usr/bin
/mnt/autorun

echo /mnt/autorun completed. Unmounting /mnt.
