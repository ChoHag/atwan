#!/bin/sh

device_count=$(ip address ls | grep ^[0-9]+: eth | wc -l)
udev_count=$(grep ^SUBSYSTEM /etc/udev/rules.d/70-persistent-net.rules | wc -l)
if [ $device_count != $udev_count ]; then
  # Just assume eth0 is gone so remove it from rules and rename eth1 to eth0
  mac=$(ip addr show | awk '/link\/ether/ {print $2}' | tail -n1)
  sed '1,6p;10p;11s/eth1/eth0/p' -i /etc/udev/rules.d/70-persistent-net.rules
  # Otherwise udevadm tries to bring up eth0 despite ONBOOT:
  sed 's/dhcp/none/' -i /etc/sysconfig/network-scripts/ifcfg-eth0
  udevadm control --reload-rules
  udevadm trigger
elif [ $device_count = 1 ]; then
  mac=$(ip addr show dev eth0 | awk '/link\/ether/ {print $2}')
else
  echo Unexpected network configuration! >&2
  exit 1
fi

cat <<EONET >/etc/sysconfig/network
NETWORKING=yes
HOSTNAME=$at_hostname
EONET

cat <<EOHOSTS >/etc/hosts
127.0.0.1 $at_fqdn $at_hostname localhost localhost.localdomain localhost4 localhost4.localdomain4
::1       $at_fqdn $at_hostname localhost localhost.localdomain localhost6 localhost6.localdomain6
EOHOSTS

hostname $at_hostname

pkill mingetty

/etc/init.d/rsyslog restart

echo search $at_domain > /etc/resolv.conf
for ns in $at_dns; do
  echo nameserver $ns
done >> /etc/resolv.conf

if [ "$at_proxy" ]; then
  (
    echo http_proxy="$at_proxy"
    echo https_proxy="$at_proxy"
    echo ftp_proxy="$at_proxy"
  ) >> /etc/environment

  echo proxy=$at_proxy >> /etc/yum.conf
fi

cat <<EOIF >/etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE=eth0
ONBOOT=yes
HWADDR=$mac
TYPE=Ethernet
BOOTPROTO=none
IPADDR=$at_ip
NETMASK=$at_mask
GATEWAY=$at_gateway
EOIF

ifup eth0
