#!/bin/sh

device_count=\$(ip address ls | grep ^[0-9]+:\\ eth | wc -l)
udev_count=\$(grep ^SUBSYSTEM /etc/udev/rules.d/70-persistent-net.rules | wc -l)
if [ \$device_count != \$udev_count ]; then
  # Just assume eth0 is gone so remove it from rules and rename eth1 to eth0
  mac=\$(ip addr show | awk '/link\/ether/ {print \$2}' | tail -n1)
  sed '1,6p;10p;11s/eth1/eth0/p' -i /etc/udev/rules.d/70-persistent-net.rules
  udevadm control --reload-rules
  udevadm trigger
elif [ \$device_count = 1 ]; then
  mac=\$(ip addr show dev eth0 | awk '/link\/ether/ {print \$2}')
else
  echo Unexpected network configuration! >&2
  exit 1
fi

cat <<EONET >/etc/sysconfig/network
NETWORKING=yes
HOSTNAME=$hostname
EONET
cat <<EOHOSTS >/etc/hosts
127.0.0.1 $fqdn $hostname localhost localhost.localdomain localhost4 localhost4.localdomain4
::1       $fqdn $hostname localhost localhost.localdomain localhost6 localhost6.localdomain6
EOHOSTS
hostname $hostname
pkill mingetty
/etc/init.d/rsyslog restart

cat <<EOIF >/etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE=eth0
ONBOOT=yes
HWADDR=\$mac
TYPE=Ethernet
BOOTPROTO=none
IPADDR=$ip
NETMASK=$netmask
GATEWAY=$gateway
EOIF
ifup eth0

echo search $domain > /etc/resolv.conf
for ns in $dns; do
  echo nameserver \$ns >> /etc/resolv.conf
done

if [ "$proxy_url" ]; then
  export http_proxy="$proxy_url" https_proxy="$proxy_url" ftp_proxy="$proxy_url"
  (
    echo http_proxy="$proxy_url"
    echo https_proxy="$proxy_url"
    echo ftp_proxy="$proxy_url"
  ) >> /etc/environment
  echo proxy=$proxy_url >> /etc/yum.conf
fi


