#!bash
# atwan/gold-installer/initialiser.in
#
# Atwan gold image initialiser functionality. This will be at or near the top
# of the cron initialiser script thus these are the most likely to have been
# overridden. Tread carefully.

# If it's unix and we're root, test/[ and touch/> will work so all this really
# depends on is the /var/lock directory. Shouldn't need to be overridden much.
#
at_lock() {
  if [ -e /var/lock/initialise.lock ]; then
    exit 2
  fi
  echo $$ >/var/lock/initialise.lock
  trap 'rm -f /var/lock/initialise.lock' EXIT
}

# The normal method is to look for a CD. Blame VMWare for still not having
# virtual USB block devices in 2013.
#
at_mount() {
  if ! awk '$2 == "/mnt" {exit 1}' /proc/mounts; then # if clause is inverted
    echo $0: /mnt is already mounted. >&2
    exit 1
  fi

  mount -o ro /dev/cdrom /mnt 2>/dev/null || exit 3
  trap 'umount /mnt' EXIT
  export at_top=/mnt
}

at_unmount() { at_umount "$@"; } # Typos
# Taken care of by trap:
at_umount() { :; }
at_unlock() { :; }

# The CD should contain a file called list, listing all the files on the CD.
# All the files, including this one, should be signed by the GPG key who's
# public counterpart is trusted by the gold image.
#
# There should also be a 'autorun' file which is sourced in the at_autorun
# step.
#
# This file could be used better to make the verification more strong.
#
at_verify() {
  failgpg() {
    echo The signature of "$at_top"/"$1" could not be verified. >&2
    fail=1
  }

  if [ ! -e "$at_top"/list -o ! -e "$at_top"/list.sig ]; then
    exit 0
  fi

  if ! gpg --verify "$at_top"/list.sig; then
    failgpg "$at_top"/list
    exit 1
  fi

  unset fail
  unset got_autorun

  while read file; do
    if [ "${file##*/}" = "autorun" ]; then
      got_autorun=1
    fi
    gpg --verify "$at_top"/"$file".sig || failgpg "$at_top"/"$file"
  done <"$at_top"/list

  if [ "$fail" ]; then
    exit 1
  fi
}

# Load this server's custom variables.
#
at_variables() {
  if [ -e "$at_top"/variables ]; then
    . "$at_top"/variables
  fi
}

# _Source_ (not execute) the autorun script.
#
at_autorun() {
  # This checks not only that it exists, but that it's signed too.
  if [ -z "$got_autorun" ]; then
    echo "$at_top"/autorun not found. >&2
    exit 1
  fi

  . "$at_top"/autorun
}

# Extract the bootstrap tarball in /etc. Note that this will walk all over /etc
# without prejudice so make sure the tarball is safe.
#
autostep_bootstrap() {
  tar xz -C /etc <"$at_top"/etc.tgz
}
